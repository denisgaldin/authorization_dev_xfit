pipeline {
    agent any

    environment {
        BASE_URL = credentials('xfit_base_url') // –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å credentials
    }

    tools {
        python 'Python_3.13' // –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ Jenkins ‚Üí Global Tool Configuration
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üîÑ –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è'
                checkout scm
            }
        }

        stage('Install & Run') {
            steps {
                echo 'üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤'
                sh '''
                    python3 -m venv .venv
                    . .venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                    pytest --alluredir=allure-results --maxfail=1 --disable-warnings -v
                '''
            }
        }

        stage('Allure Report') {
            steps {
                echo 'üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Allure –æ—Ç—á–µ—Ç–∞'
                allure([
                    includeProperties: false,
                    jdk: '',
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'allure-results']]
                ])
            }
        }
    }

    post {
        always {
            echo 'üßπ –û—á–∏—Å—Ç–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è'
            sh 'rm -rf .venv'
        }

        fai
